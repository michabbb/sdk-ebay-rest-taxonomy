<?php
/**
 * ExpiredCategoryTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\taxonomy
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Taxonomy API
 *
 * Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.
 *
 * The version of the OpenAPI document: v1.1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace macropage\SDKs\ebay\rest\taxonomy\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ExpiredCategoryTest Class Doc Comment
 *
 * @category    Class
 * @description This type defines the expired category ID for the requested category tree, and the currently active category ID that has replaced it.
 * @package     macropage\SDKs\ebay\rest\taxonomy
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ExpiredCategoryTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ExpiredCategory"
     */
    public function testExpiredCategory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fromCategoryId"
     */
    public function testPropertyFromCategoryId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "toCategoryId"
     */
    public function testPropertyToCategoryId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
